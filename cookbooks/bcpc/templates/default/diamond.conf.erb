################################################
#
#              Generated by Chef
#
################################################

################################################################################
# Diamond Configuration File
################################################################################

################################################################################
### Options for the server
[server]

# Handlers for published metrics.
handlers = diamond.handler.graphitepickle.GraphitePickleHandler

# User diamond will run as
# Leave empty to use the current user
user = diamond

# Group diamond will run as
# Leave empty to use the current group
group = nogroup

# Pid file
pid_file = /var/run/diamond.pid

# Directory to load collector modules from
collectors_path = /usr/share/diamond/collectors/

# Directory to load collector configs from
collectors_config_path = /etc/diamond/collectors/

# Directory to load handler configs from
handlers_config_path = /etc/diamond/handlers/

# Interval to reload collectors
collectors_reload_interval = 3600

################################################################################
### Options for handlers
[handlers]

# daemon logging handler(s)
keys = rotated_file

### Defaults options for all Handlers
[[default]]

[[ArchiveHandler]]

# File to write archive log files
log_file = /var/log/diamond/archive.log

# Number of days to keep archive log files
days = 7

[[GraphiteHandler]]
### Options for GraphiteHandler

# Graphite server host
host = <%=node['bcpc']['monitoring']['vip']%>

# Port to send metrics to
port = 2013

# Socket timeout (seconds)
timeout = 15

# Batch size for metrics
batch = 512

[[GraphitePickleHandler]]
### Options for GraphitePickleHandler

# Graphite server host
host = <%=node['bcpc']['monitoring']['vip']%>

# Port to send metrics to
port = 2014

# Socket timeout (seconds)
timeout = 15

# Batch size for pickled metrics
batch = 512

[[MySQLHandler]]
### Options for MySQLHandler

# MySQL Connection Info
hostname    = 127.0.0.1
port        = 3306
username    = root
password    =
database    = diamond
table       = metrics
# INT UNSIGNED NOT NULL
col_time    = timestamp
# VARCHAR(255) NOT NULL
col_metric  = metric
# VARCHAR(255) NOT NULL
col_value   = value

[[StatsdHandler]]
host = 127.0.0.1
port = 8125

[[TSDBHandler]]
host = 127.0.0.1
port = 4242
timeout = 15

[[LibratoHandler]]
user = user@example.com
apikey = abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwxyz01


[[HttpPostHandler]]

### Urp to post the metrics
url = http://localhost:8888/
### Metrics batch size
batch = 100


################################################################################
### Options for collectors
[collectors]

[[default]]
### Defaults options for all Collectors

# Uncomment and set to hardcode a hostname for the collector path
# Keep in mind, periods are seperators in graphite
# hostname = my_custom_hostname

# If you prefer to just use a different way of calculating the hostname
# Uncomment and set this to one of these values:

# smart             = Default. Tries fqdn_short. If that's localhost, uses hostname_short

# fqdn_short        = Default. Similar to hostname -s
# fqdn              = hostname output
# fqdn_rev          = hostname in reverse (com.example.www)

# uname_short       = Similar to uname -n, but only the first part
# uname_rev         = uname -r in reverse (com.example.www)

# hostname_short    = `hostname -s`
# hostname          = `hostname`
# hostname_rev      = `hostname` in reverse (com.example.www)

# hostname_method = smart

# Path Prefix and Suffix
# you can use one or both to craft the path where you want to put metrics
# such as: %(path_prefix)s.$(hostname)s.$(path_suffix)s.$(metric)s
# path_prefix = servers
# path_suffix =

# Default Poll Interval (seconds)
interval = 10

[[CPUCollector]]
enabled = True

[[DiskSpaceCollector]]
enabled = True

[[DiskUsageCollector]]
enabled = True

[[LoadAverageCollector]]
enabled = True

[[MemoryCollector]]
enabled = True

[[VMStatCollector]]
enabled = True

[[KSMCollector]]
enabled = True

[[NetworkCollector]]
enabled = True

[[TCPCollector]]
enabled = True

[[UDPCollector]]
enabled = True

[[NtpdCollector]]
enabled = True

[[CephCollector]]
enabled = False

<% if node['bcpc']['virt_type'] == "kvm" -%>
[[KVMCollector]]
enabled = True

[[IPMISensorCollector]]
enabled = True

[[SmartCollector]]
enabled = False
<% end -%>

[[BC2Collector]]
enabled = True
interval = 900
path = openstack
path_prefix = BC2
hostname = <%=node['bcpc']['region_name']%>
db_user = <%=get_config('mysql-root-user')%>
db_password = <%=get_config('mysql-root-password')%>
db_host = <%=node['bcpc']['management']['ip']%>

<% if @servers.include?(node) -%>
[[HAProxyCollector]]
enabled = False
url=http://127.0.0.1:1936/haproxy?stats;csv

#[[MemcachedCollector]]
#enabled = True

[[PowerDNSCollector]]
enabled = True

[[MySQLCollector]]
enabled = True
hosts=<%=get_config('mysql-root-user')%>:<%=get_config('mysql-root-password')%>@<%=node['bcpc']['management']['ip']%>:3306/<%=node['bcpc']['dbname']['nova']%>
innodb = True

[[RabbitMQCollector]]
enabled = True
host=<%=node['bcpc']['management']['ip']%>:55672
password=<%=get_config('rabbitmq-password')%>
<% if @servers.length > 1 -%>
cluster = True
<% end -%>
queues_ignored = <%= node['bcpc']['diamond']['collectors']['rabbitmq']['queues_ignored'] %>
queues = <%= node['bcpc']['diamond']['collectors']['rabbitmq']['queues'] %>
vhosts = <%= node['bcpc']['diamond']['collectors']['rabbitmq']['vhosts'] %>
<% end -%>

################################################################################
### Options for logging
# for more information on file format syntax:
# http://docs.python.org/library/logging.config.html#configuration-file-format

[loggers]

keys = root

# handlers are higher in this config file, in:
# [handlers]
# keys = ...

[formatters]

keys = default

[logger_root]

# to increase verbosity, set DEBUG
level = INFO
handlers = rotated_file
propagate = 1

[handler_rotated_file]

class = handlers.TimedRotatingFileHandler
level = INFO
formatter = default
# rotate at midnight, each day and keep 7 days
args = ('/var/log/diamond/diamond.log', 'midnight', 1, 7)

[formatter_default]

format = [%(asctime)s] [%(threadName)s] %(message)s
datefmt =
